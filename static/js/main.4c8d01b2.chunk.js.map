{"version":3,"sources":["components/navbar.gamelist.jsx","components/create.game.modal.jsx","components/game.list.jsx","components/dropdown.score.jsx","components/user.input.jsx","components/confirm.button.jsx","components/hand.jsx","components/hands.jsx","components/total.row.jsx","components/navbar.game.jsx","components/game.loading.jsx","components/game.jsx","App.js","serviceWorker.js","index.js"],"names":["props","usernameRef","useRef","searchRef","submit","e","callback","preventDefault","stopPropagation","Navbar","className","bg","variant","Form","inline","onSubmit","saveUsername","current","value","trim","InputGroup","onChange","setUsernameSaved","Prepend","Text","id","role","aria-label","FormControl","ref","placeholder","aria-describedby","defaultValue","username","Button","onClick","disabled","usernameSaved","setSeatchText","createGame","type","handleClose","connection","emit","setShow","generateField","createRef","useState","fields","setFields","gameNameRef","valid","timer","setTimer","validateField","map","f","tv","isNaN","t","length","Number","Modal","show","onHide","Header","closeButton","Title","Body","FormText","newGameId","isInvalid","onBlur","field","i","key","Control","style","width","setField","splice","removeField","concat","ListGroup","users","user","Item","name","Footer","forEach","defaultTimer","gameId","columns","history","push","games","useGames","searchText","showCreateGameModal","setShowCreateGameModal","setNewGameId","off","on","setGameId","filter","game","includes","Card","border","setGames","useEffect","data","toggle","handState","DropdownButton","onSelect","setInputScore","handId","inputIndex","as","title","Dropdown","eventKey","inputValid","inputRef","setInputValid","inputOnChange","setInputValue","index","character","v","toUpperCase","charAt","manageInputValid","size","state","input","score","button","hand","confirmHand","submitHand","handTotalScore","inputs","reduce","tot","showSpinner","Spinner","animation","j","hands","totalScore","Alert","scoreBoard","Popover","Content","sort","a","b","textColor","visibility","OverlayTrigger","trigger","placement","overlay","Label","quitGame","Heading","useTimer","useParams","success","gameExists","gameStarted","Table","striped","bordered","hover","responsive","c","handIndex","findIndex","h","setHands","handCharacter","useGameExists","setGameExists","useColumns","setColumns","useHands","userId","useSocketConnection","server","setCookie","setUsername","socket","setSocket","s","socketIOClient","reconnectionAttempts","timeout","transports","Object","keys","constructor","maxAge","useStarted","started","setStarted","res","Boolean","window","location","hostname","match","ReactDOM","render","useHistory","useCookies","setUsers","console","log","path","prefixUrl","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c8d01b2.chunk.js","sourcesContent":["\r\nimport React, { useRef } from 'react';\r\nimport { Button, Navbar, Form, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport default props => {\r\n    let usernameRef = useRef();\r\n    let searchRef = useRef();\r\n\r\n    const submit = (e, callback) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar className=\"bg-light justify-content-between\" bg=\"dark\" variant=\"dark\">\r\n                <Form inline onSubmit={(e) => submit(e, () => props.saveUsername(usernameRef.current.value.trim()))}>\r\n                    <InputGroup className=\"mr-sm-2\" onChange={() => props.setUsernameSaved(usernameRef.current.value.trim() === '')}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"basic-addon1\">\r\n                                <span role=\"img\" aria-label=\"user-avatar-icon\">\r\n                                    👤\r\n                                </span>\r\n                            </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            ref={usernameRef}\r\n                            placeholder=\"Username\"\r\n                            aria-label=\"Username\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                            defaultValue={props.username}\r\n                        />\r\n                    </InputGroup>\r\n                    <Button onClick={() => props.saveUsername(usernameRef.current.value.trim())} disabled={props.usernameSaved}>Save</Button>\r\n                </Form>\r\n                <Form inline onSubmit={(e) => submit(e, () => props.setSeatchText(searchRef.current.value.trim()))}>\r\n                    <Button variant=\"success\" className=\" mr-sm-2\" onClick={() => props.createGame()}>Create game</Button>\r\n                    <FormControl ref={searchRef} type=\"text\" placeholder=\"Type ID or name...\" className=\" mr-sm-2\" />\r\n                    <Button onClick={() => props.setSeatchText(searchRef.current.value.trim())}>Search</Button>\r\n                </Form>\r\n            </Navbar>\r\n        </>\r\n    );\r\n}","import React, { useState, useRef, createRef } from 'react';\r\nimport {\r\n\tModal,\r\n\tButton,\r\n\tForm,\r\n\tFormText,\r\n\tFormControl,\r\n\tListGroup\r\n} from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\tconst handleClose = () => {\r\n\t\tprops.connection.emit('reqQuitGame');\r\n\t\tprops.setShow(false);\r\n\t};\r\n\tconst generateField = () => ({ value: '', ref: createRef() });\r\n\tconst [fields, setFields] = useState([generateField()]);\r\n\tconst gameNameRef = useRef();\r\n\tconst [timer, setTimer] = useState({\r\n\t\tvalid: true,\r\n\t\tvalue: 60,\r\n\t\tref: createRef()\r\n\t});\r\n\r\n\tconst submit = (e, callback) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tconst validateField = () => {\r\n\t\tsetFields(\r\n\t\t\t[...fields].map(f => ({ ...f, valid: f.value.trim() !== '' }))\r\n\t\t);\r\n\r\n\t\tlet tv = !isNaN(timer.ref.current.value.trim());\r\n\t\tlet t = { ...timer };\r\n\t\tt.valid = tv;\r\n\t\tif (tv) {\r\n\t\t\tt.value =\r\n\t\t\t\ttimer.ref.current.value.trim().length === 0\r\n\t\t\t\t\t? 60\r\n\t\t\t\t\t: Number(timer.ref.current.value.trim());\r\n\t\t}\r\n\r\n\t\tsetTimer({\r\n\t\t\t...timer,\r\n\t\t\tvalid: t.valid,\r\n\t\t\tvalue: t.value\r\n\t\t});\r\n\t};\r\n\r\n\tconst startGame = () => {\r\n\t\tlet valid = true;\r\n\t\tfields.forEach(f => (valid &= f.valid));\r\n\t\tvalid &= timer.valid;\r\n\r\n\t\tif (valid) {\r\n\t\t\tprops.connection.emit('startGame', {\r\n\t\t\t\tdefaultTimer: timer.value,\r\n\t\t\t\tgameId: props.newGameId,\r\n\t\t\t\tname: gameNameRef.current.value.trim(),\r\n\t\t\t\tcolumns: fields.map(f => f.value.trim())\r\n\t\t\t});\r\n\t\t\tprops.history.push('/game/' + props.newGameId);\r\n\t\t\tprops.setShow(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst setField = (i, value) => {\r\n\t\tlet f = [...fields];\r\n\t\tf[i].value = f[i].ref.current.value.trim();\r\n\t\tsetFields(f);\r\n\t};\r\n\r\n\tconst addField = () => {\r\n\t\tsetFields([...fields].concat(generateField()));\r\n\t};\r\n\r\n\tconst removeField = i => {\r\n\t\tlet f = [...fields];\r\n\t\tf.splice(i, 1);\r\n\t\tsetFields(f);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal show={props.show} onHide={handleClose}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Create a game</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<FormText className='font-weight-bold'>ID</FormText>\r\n\t\t\t\t\t<FormText\r\n\t\t\t\t\t\tclassName='font-weight-bold text-danger'\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.newGameId}\r\n\t\t\t\t\t</FormText>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<FormText className='font-weight-bold'>Name</FormText>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Game name...'\r\n\t\t\t\t\t\tref={gameNameRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<FormText className='font-weight-bold'>Timer</FormText>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='60'\r\n\t\t\t\t\t\tref={timer.ref}\r\n\t\t\t\t\t\tisInvalid={!timer.valid}\r\n\t\t\t\t\t\tonBlur={validateField}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<FormText className='font-weight-bold'>Fields</FormText>\r\n\t\t\t\t\t{fields.map((field, i) => (\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tinline\r\n\t\t\t\t\t\t\tclassName=' mt-1'\r\n\t\t\t\t\t\t\tonSubmit={e => submit(e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tisInvalid={!field.valid}\r\n\t\t\t\t\t\t\t\tref={field.ref}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tplaceholder='Istert field...'\r\n\t\t\t\t\t\t\t\tstyle={{ width: '80%' }}\r\n\t\t\t\t\t\t\t\tclassName=' mr-sm-1'\r\n\t\t\t\t\t\t\t\tonChange={() => setField(i)}\r\n\t\t\t\t\t\t\t\tvalue={field.value}\r\n\t\t\t\t\t\t\t\tonBlur={validateField}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{fields.length > 1 ? (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\t\t\tclassName=' mr-sm-1'\r\n\t\t\t\t\t\t\t\t\tonClick={() => removeField(i)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{i === fields.length - 1 ? (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\t\t\tclassName=' mr-sm-1'\r\n\t\t\t\t\t\t\t\t\tonClick={() => addField()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t+\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<FormText className='font-weight-bold'>\r\n\t\t\t\t\t\tUsers connected\r\n\t\t\t\t\t</FormText>\r\n\t\t\t\t\t<ListGroup>\r\n\t\t\t\t\t\t{props.users.map((user, i) => (\r\n\t\t\t\t\t\t\t<ListGroup.Item key={i}>{user.name}</ListGroup.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant='secondary' onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant='primary' onClick={startGame}>\r\n\t\t\t\t\t\tStart game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport NavBar from './navbar.gamelist';\r\nimport CreateGameModal from './create.game.modal';\r\nexport default props => {\r\n\tlet games = useGames(props.connection);\r\n\tlet [searchText, setSeatchText] = useState('');\r\n\tconst [showCreateGameModal, setShowCreateGameModal] = useState(false);\r\n\tconst [newGameId, setNewGameId] = useState(null);\r\n\r\n\tconst createGame = () => {\r\n\t\tprops.connection.emit('reqCreateGame');\r\n\t\tprops.connection.off('getCreateGame');\r\n\t\tprops.connection.on('getCreateGame', gameId => {\r\n\t\t\tsetNewGameId(gameId);\r\n\t\t\tsetShowCreateGameModal(true);\r\n\t\t});\r\n\t};\r\n\r\n\tlet joinGame = gameId => {\r\n\t\tprops.history.push('/game/' + gameId);\r\n\t};\r\n\r\n\tlet gameFilter = game =>\r\n\t\tgame.id.includes(searchText) || game.name.includes(searchText);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NavBar\r\n\t\t\t\tcreateGame={createGame}\r\n\t\t\t\tsetSeatchText={setSeatchText}\r\n\t\t\t\tsaveUsername={props.saveUsername}\r\n\t\t\t\tsetUsernameSaved={props.setUsernameSaved}\r\n\t\t\t\tusername={props.username}\r\n\t\t\t\tusernameSaved={props.usernameSaved}\r\n\t\t\t/>\r\n\t\t\t<CreateGameModal\r\n\t\t\t\tsetGameId={props.setGameId}\r\n\t\t\t\tshow={showCreateGameModal}\r\n\t\t\t\tnewGameId={newGameId}\r\n\t\t\t\tsetShow={setShowCreateGameModal}\r\n\t\t\t\tconnection={props.connection}\r\n\t\t\t\thistory={props.history}\r\n\t\t\t\tusers={props.users}\r\n\t\t\t/>\r\n\t\t\t{games.filter(gameFilter).map(game => (\r\n\t\t\t\t<Card key={game.id} border='primary' className='m-2 game-card'>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>{game.name}</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span className='border border-dark p-3 mt-3'>\r\n\t\t\t\t\t\t\t\t{game.users.map((user, i) => (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t\t\t\t\t\t{i !== game.users.length - 1 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<>, </>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tID:\r\n\t\t\t\t\t\t\t\t<span className='text-primary m-1'>\r\n\t\t\t\t\t\t\t\t\t{game.id}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='primary'\r\n\t\t\t\t\t\t\tonClick={() => joinGame(game.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tJoin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nlet useGames = connection => {\r\n\tlet [games, setGames] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (connection) {\r\n\t\t\tconnection.emit('reqGames');\r\n\t\t\tconnection.on('getGames', data => setGames(data));\r\n\t\t\treturn () => {\r\n\t\t\t\tconnection.off('getCreateGame');\r\n\t\t\t\tconnection.off('getGames');\r\n\t\t\t};\r\n\t\t}\r\n\t}, [connection]);\r\n\r\n\treturn games;\r\n};\r\n","import React from 'react';\r\nimport { DropdownButton, InputGroup, Dropdown } from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\r\n    let variant = '';\r\n    switch (props.toggle) {\r\n        case 0: variant = 'danger'; break;\r\n        case 5: variant = 'primary'; break;\r\n        case 10: variant = 'success'; break;\r\n        default: variant = 'danger'; break;\r\n    }\r\n    \r\n\r\n    return (\r\n        props.handState !== 'confirmed' ?\r\n            (\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text className={variant}>{props.toggle}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n            )\r\n            :\r\n            (\r\n                <DropdownButton\r\n                    disabled={props.disabled} onSelect={value => props.setInputScore(value, props.handId, props.inputIndex)}\r\n                    as={InputGroup.Prepend}\r\n                    variant={variant}\r\n                    title={props.toggle}\r\n                >\r\n                    <Dropdown.Item eventKey={0}>0</Dropdown.Item>\r\n                    {\r\n                        props.inputValid ?\r\n                            (\r\n                                <>\r\n                                    <Dropdown.Item eventKey={5}>5</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey={10}>10</Dropdown.Item>\r\n                                </>\r\n                            )\r\n                            : ''\r\n                    }\r\n                </DropdownButton>\r\n            )\r\n    )\r\n\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport Score from './dropdown.score';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\nimport { useEffect } from 'react';\r\n\r\nexport default props => {\r\n\tlet inputRef = useRef();\r\n\r\n\tlet [inputValid, setInputValid] = useState(true);\r\n\r\n\tlet manageInputValid = value => {\r\n\t\tlet v =\r\n\t\t\tvalue\r\n\t\t\t\t.trim()\r\n\t\t\t\t.toUpperCase()\r\n\t\t\t\t.charAt(0) === props.character.toUpperCase().charAt(0) ||\r\n\t\t\tvalue.length === 0;\r\n\t\tsetInputValid(v);\r\n\t};\r\n\r\n\tlet inputOnChange = value => {\r\n\t\tprops.setInputValue(value, props.handId, props.index, props.character);\r\n\t\tmanageInputValid(value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.handState !== 'playing') {\r\n\t\t\tlet v =\r\n\t\t\t\tinputRef.current.value\r\n\t\t\t\t\t.trim()\r\n\t\t\t\t\t.toUpperCase()\r\n\t\t\t\t\t.charAt(0) === props.character.toUpperCase().charAt(0);\r\n\t\t\tsetInputValid(v);\r\n\r\n\t\t\tif (!inputValid) {\r\n\t\t\t\tinputRef.current.value = '';\r\n\t\t\t\tprops.setInputScore(0, props.handId, props.index);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [props.handState, inputValid]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<td className='align-middle'>\r\n\t\t\t\t<InputGroup size='sm' className='mb-3'>\r\n\t\t\t\t\t{props.state !== 'playing' ? (\r\n\t\t\t\t\t\t<Score\r\n\t\t\t\t\t\t\thandId={props.handId}\r\n\t\t\t\t\t\t\tinputIndex={props.index}\r\n\t\t\t\t\t\t\ttoggle={props.input.score}\r\n\t\t\t\t\t\t\thandState={props.handState}\r\n\t\t\t\t\t\t\tsetInputScore={props.setInputScore}\r\n\t\t\t\t\t\t\tinputValid={inputValid}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tisInvalid={!inputValid}\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\taria-label='Small'\r\n\t\t\t\t\t\taria-describedby='inputGroup-sizing-sm'\r\n\t\t\t\t\t\tdisabled={props.handState !== 'playing'}\r\n\t\t\t\t\t\tdefaultValue={props.input.value}\r\n\t\t\t\t\t\tonChange={() =>\r\n\t\t\t\t\t\t\tinputOnChange(inputRef.current.value.trim())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</td>\r\n\t\t</>\r\n\t);\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\r\n    let button;\r\n\r\n    switch (props.hand.state) {\r\n        case 'playing':\r\n            button = (\r\n                <Button variant=\"success\" onClick={() => props.confirmHand(props.hand.id)}>\r\n                    Confirm\r\n                </Button>\r\n            )\r\n            break;\r\n\r\n        case 'waiting':\r\n            button = (\r\n                <Button variant=\"success\" onClick={() => props.confirmHand(props.hand.id)} disabled>\r\n                    Confirmed\r\n                </Button>\r\n            )\r\n            break;\r\n\r\n        case 'confirmed':\r\n            button = (\r\n                <Button variant=\"primary\" onClick={() => props.submitHand(props.hand.id)}>\r\n                    Submit\r\n                </Button>\r\n            )\r\n            break;\r\n\r\n       default:\r\n            button = (\r\n               <h6>Submitted</h6>\r\n            )\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td className=\"align-middle\">\r\n                {button}\r\n            </td>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport UserInput from './user.input';\r\nimport ConfirmButton from './confirm.button';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\tlet handTotalScore = props.hand.inputs.reduce(\r\n\t\t(tot, input) => tot + input.score,\r\n\t\t0\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<td className='align-middle'>\r\n\t\t\t\t{props.showSpinner && (\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tanimation='grow'\r\n\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\tclassName='float-left'\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{props.hand.character}\r\n\t\t\t</td>\r\n\t\t\t{props.hand.inputs.map((input, j) => (\r\n\t\t\t\t<UserInput\r\n\t\t\t\t\tkey={j}\r\n\t\t\t\t\tindex={j}\r\n\t\t\t\t\thandId={props.hand.id}\r\n\t\t\t\t\tcharacter={props.hand.character}\r\n\t\t\t\t\tinput={input}\r\n\t\t\t\t\thandState={props.hand.state}\r\n\t\t\t\t\tsetInputScore={props.setInputScore}\r\n\t\t\t\t\tsetInputValue={props.setInputValue}\r\n\t\t\t\t\tstate={props.hand.state}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t<ConfirmButton\r\n\t\t\t\thand={props.hand}\r\n\t\t\t\tconfirmHand={props.confirmHand}\r\n\t\t\t\tsubmitHand={props.submitHand}\r\n\t\t\t/>\r\n\t\t\t<td className='align-middle'>{handTotalScore}</td>\r\n\t\t</>\r\n\t);\r\n};\r\n","\r\nimport React from 'react';\r\nimport Hand from './hand'\r\n\r\nexport default props => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.hands.map(\r\n                    (hand, i) =>\r\n                        <tr key={i} className=\"text-center align-middle\">\r\n                            <Hand showSpinner={i===props.hands.length-1} hand={hand} setInputScore={props.setInputScore} setInputValue={props.setInputValue} confirmHand={props.confirmHand} submitHand={props.submitHand}/>\r\n                        </tr>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\r\n    let totalScore = props.hands.reduce((tot, hand) => tot + hand.inputs.reduce((tot, input) => tot + input.score, 0), 0);\r\n\r\n    return (\r\n        <>\r\n            <footer className=\"w-100 p-1 bg-dark text-white fixed-bottom\">\r\n                <Alert variant=\"primary\" className=\"float-right m-0\">\r\n                    {totalScore}\r\n                </Alert>\r\n                <Alert variant=\"none\" className=\"float-right m-0\">\r\n                    TOTAL\r\n                </Alert>\r\n            </footer>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n\tButton,\r\n\tNavbar,\r\n\tForm,\r\n\tInputGroup,\r\n\tFormControl,\r\n\tPopover,\r\n\tOverlayTrigger,\r\n\tListGroup\r\n} from 'react-bootstrap';\r\n\r\nexport default props => {\r\n\tconst sortUsersByScore = (a, b) => a.score > b.score;\r\n\r\n\tconst scoreBoard = (\r\n\t\t<Popover id='scoreBoard'>\r\n\t\t\t<Popover.Title as='h3'>Scoreboard</Popover.Title>\r\n\t\t\t<Popover.Content>\r\n\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t{props.users.sort(sortUsersByScore).map((user, i) => {\r\n\t\t\t\t\t\tlet textColor = '';\r\n\t\t\t\t\t\tswitch (i) {\r\n\t\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\t\ttextColor = 'text-success';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\ttextColor = 'text-danger';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\ttextColor = 'text-warning';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\ttextColor = 'text-warning';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<ListGroup.Item key={i}>\r\n\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t<div className={'col-xs-6 mr-2 '}>\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\trole='img'\r\n\t\t\t\t\t\t\t\t\t\t\taria-label='King'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvisibility:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ti === 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'visible'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'hidden'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t&#128081;\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{/* <div className={\"col-xs-6 mr-2 \"}>{(i + 1)}.</div> */}\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={'col-xs-6 mr-2 ' + textColor}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{user.score}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-xs-6 '>{user.name}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Popover.Content>\r\n\t\t</Popover>\r\n\t);\r\n\r\n\t// console.log(props.timer);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar\r\n\t\t\t\tclassName='justify-content-between'\r\n\t\t\t\tbg='dark'\r\n\t\t\t\tvariant='dark'\r\n\t\t\t>\r\n\t\t\t\t<Form inline>\r\n\t\t\t\t\t<InputGroup className='mr-sm-2'>\r\n\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<InputGroup.Text id='basic-addon1'>\r\n\t\t\t\t\t\t\t\t<span role='img' aria-label='user-avatar-icon'>\r\n\t\t\t\t\t\t\t\t\t👤\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</InputGroup.Text>\r\n\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\t\taria-label='Username'\r\n\t\t\t\t\t\t\taria-describedby='basic-addon1'\r\n\t\t\t\t\t\t\tdefaultValue={props.username}\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputGroup>\r\n\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\ttrigger='click'\r\n\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\toverlay={scoreBoard}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button variant='info'>&#9776;</Button>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<Form inline>\r\n\t\t\t\t\t<Form.Label className='mr-sm-2 text-warning h4'>\r\n\t\t\t\t\t\t{props.timer}\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t<Button variant='danger' onClick={() => props.quitGame()}>\r\n\t\t\t\t\t\tQuit game\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Navbar>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { ListGroup, Alert, Spinner} from 'react-bootstrap';\r\n\r\nexport default props => {\r\n    return (\r\n        <>\r\n            <Alert variant=\"info\" className=\"m-3\">\r\n                <Alert.Heading>\r\n                    Game is starting ...\r\n                    <Spinner animation=\"grow\" variant=\"danger\" className=\"float-right\" />\r\n                </Alert.Heading>\r\n                <hr />\r\n                <p>\r\n                    Connected users\r\n                </p>\r\n                <ListGroup>\r\n                    {\r\n                        props.users.map((user, i) =>\r\n                            <ListGroup.Item key={i}>{user.name}</ListGroup.Item>\r\n                        )\r\n                    }\r\n                </ListGroup>\r\n            </Alert>\r\n        </>\r\n    )\r\n\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Table, Alert } from 'react-bootstrap';\r\nimport Hands from './hands';\r\nimport TotalRow from './total.row';\r\nimport NavbarGame from './navbar.game';\r\nimport LoadingGame from './game.loading';\r\nimport { useParams } from 'react-router-dom';\r\nexport default props => {\r\n\tlet timer = useTimer(props.connection);\r\n\r\n\tlet { gameId } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (gameId) props.setGameId(gameId);\r\n\t}, [gameId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.connection && props.gameId) {\r\n\t\t\tprops.connection.emit('reqJoinGame', props.gameId);\r\n\t\t\tprops.connection.off('getJoinGame');\r\n\t\t\tprops.connection.on('getJoinGame', success => {\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tprops.connection.emit('reqGameStarted', props.gameId);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn () => props.connection.off('getJoinGame');\r\n\t\t}\r\n\t}, [props.connection, props.gameId]);\r\n\r\n\tlet quitGame = () => {\r\n\t\tprops.connection.emit('reqQuitGame');\r\n\t\tprops.connection.off('getQuitGame');\r\n\t\tprops.connection.on('getQuitGame', () => props.history.push(''));\r\n\t};\r\n\r\n\tlet setInputScore = (value, handId, inputIndex) => {\r\n\t\tlet handIndex = props.hands.findIndex(hand => hand.id === handId);\r\n\t\tlet h = [...props.hands];\r\n\t\th[handIndex].inputs[inputIndex].score = Number(value);\r\n\r\n\t\tprops.setHands(h);\r\n\t};\r\n\r\n\tlet setInputValue = (value, handId, inputIndex, handCharacter) => {\r\n\t\tif (\r\n\t\t\tvalue\r\n\t\t\t\t.trim()\r\n\t\t\t\t.toUpperCase()\r\n\t\t\t\t.charAt(0) === handCharacter.toUpperCase().charAt(0)\r\n\t\t) {\r\n\t\t\tlet handIndex = props.hands.findIndex(hand => hand.id === handId);\r\n\t\t\tlet h = [...props.hands];\r\n\t\t\th[handIndex].inputs[inputIndex].value = value;\r\n\r\n\t\t\tprops.setHands(h);\r\n\t\t}\r\n\t};\r\n\r\n\tlet confirmHand = handId => {\r\n\t\tlet handIndex = props.hands.findIndex(hand => hand.id === handId);\r\n\t\tlet h = [...props.hands];\r\n\t\th[handIndex].state = 'waiting';\r\n\r\n\t\tprops.setHands(h);\r\n\t};\r\n\r\n\tlet submitHand = handId => {\r\n\t\tlet handIndex = props.hands.findIndex(hand => hand.id === handId);\r\n\t\tlet h = [...props.hands];\r\n\t\th[handIndex].state = 'submitted';\r\n\r\n\t\tprops.setHands(h);\r\n\t};\r\n\r\n\tif (!props.gameExists) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<NavbarGame\r\n\t\t\t\t\tusername={props.username}\r\n\t\t\t\t\tquitGame={quitGame}\r\n\t\t\t\t\tusers={props.users}\r\n\t\t\t\t\ttimer={timer}\r\n\t\t\t\t/>\r\n\t\t\t\t<Alert variant='danger' className='m-3'>\r\n\t\t\t\t\t<Alert.Heading>ERROR 404</Alert.Heading>\r\n\t\t\t\t\t<p>Not found</p>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className='mb-0'>This game does not exists!</p>\r\n\t\t\t\t</Alert>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<NavbarGame\r\n\t\t\t\tusername={props.username}\r\n\t\t\t\tquitGame={quitGame}\r\n\t\t\t\tusers={props.users}\r\n\t\t\t\ttimer={timer}\r\n\t\t\t/>\r\n\r\n\t\t\t{props.gameStarted ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Table striped bordered hover responsive variant='dark'>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t{props.columns.map((c, i) => (\r\n\t\t\t\t\t\t\t\t\t<th key={i}>{c}</th>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<Hands\r\n\t\t\t\t\t\t\t\thands={props.hands}\r\n\t\t\t\t\t\t\t\tsetInputScore={setInputScore}\r\n\t\t\t\t\t\t\t\tsetInputValue={setInputValue}\r\n\t\t\t\t\t\t\t\tconfirmHand={confirmHand}\r\n\t\t\t\t\t\t\t\tsubmitHand={submitHand}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t\t<TotalRow columns={props.columns} hands={props.hands} />\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<LoadingGame users={props.users} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst useTimer = connection => {\r\n\tconst [timer, setTimer] = useState('sync...');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (connection) {\r\n\t\t\tconnection.off('syncTimer');\r\n\t\t\tconnection.on('syncTimer', timer => setTimer(timer));\r\n\t\t\treturn () => connection.off('syncTimer');\r\n\t\t}\r\n\t}, [connection]);\r\n\r\n\treturn timer;\r\n};\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport GameList from './components/game.list';\nimport { useCookies } from 'react-cookie';\nimport Game from './components/game';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nexport default () => {\n\t// let server = 'http://192.168.1.69:15519';\n\tlet server = 'http://worddd.cloudno.de';\n\tlet prefixUrl = '/body-girl-animal-client';\n\n\tconst history = useHistory();\n\n\tconst [{ userId }, setCookie] = useCookies(['body-girl-animal-userId']);\n\tlet [usernameSaved, setUsernameSaved] = useState(false);\n\tlet [username, setUsername] = useState(null);\n\n\tlet connection = useSocketConnection(\n\t\tserver,\n\t\tuserId,\n\t\tsetCookie,\n\t\tsetUsername,\n\t\tsetUsernameSaved\n\t);\n\n\t// let gameId = useQuery().get('id');\n\tlet [gameId, setGameId] = useState('');\n\n\tlet [gameExists] = useGameExists(gameId, connection);\n\tlet [gameStarted] = useStarted(gameExists, gameId, userId, connection);\n\tlet [columns, setColumns] = useColumns(\n\t\tgameId,\n\t\tconnection,\n\t\tgameExists,\n\t\tgameStarted\n\t);\n\tlet [hands, setHands] = useHands(\n\t\tgameId,\n\t\tconnection,\n\t\tuserId,\n\t\tgameExists,\n\t\tgameStarted\n\t);\n\tconst [users, setUsers] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (connection && userId && gameId && hands) {\n\t\t\tconnection.off('handTimeout');\n\t\t\tconnection.on('handTimeout', () => {\n\t\t\t\tconsole.log('handTimeout');\n\t\t\t\tconnection.emit('handTimeoutClientResponse', {\n\t\t\t\t\thands: hands,\n\t\t\t\t\tuserId: userId,\n\t\t\t\t\tgameId: gameId\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [connection, userId, gameId, hands]);\n\n\tuseEffect(() => {\n\t\tif (connection) {\n\t\t\tconnection.off('getUsersConnected');\n\t\t\tconnection.on('getUsersConnected', users => setUsers(users));\n\t\t\treturn () => connection.off('getUsersConnected');\n\t\t}\n\t}, [connection]);\n\n\tlet saveUsername = value => {\n\t\tconnection.emit('reqSaveUsername', { id: userId, name: value });\n\t\tconnection.off('getSaveUsername');\n\t\tconnection.on(\n\t\t\t'getSaveUsername',\n\t\t\tsuccess => success && setUsernameSaved(true) && setUsername(value)\n\t\t);\n\t};\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path={prefixUrl+'/game/:gameId'}>\n\t\t\t\t<Game\n\t\t\t\t\tconnection={connection}\n\t\t\t\t\tsetColumns={setColumns}\n\t\t\t\t\tsetHands={setHands}\n\t\t\t\t\tsaveUsername={saveUsername}\n\t\t\t\t\tusernameSaved={usernameSaved}\n\t\t\t\t\tsetUsernameSaved={setUsernameSaved}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\thands={hands}\n\t\t\t\t\tgameId={gameId}\n\t\t\t\t\thistory={history}\n\t\t\t\t\tgameExists={gameExists}\n\t\t\t\t\tusers={users}\n\t\t\t\t\tgameStarted={gameStarted}\n\t\t\t\t\tsetGameId={setGameId}\n\t\t\t\t/>\n\t\t\t</Route>\n\n\t\t\t<Route>\n\t\t\t\t<GameList\n\t\t\t\t\tconnection={connection}\n\t\t\t\t\tsetColumns={setColumns}\n\t\t\t\t\tsetHands={setHands}\n\t\t\t\t\tsaveUsername={saveUsername}\n\t\t\t\t\tusernameSaved={usernameSaved}\n\t\t\t\t\tsetUsernameSaved={setUsernameSaved}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tgameId={gameId}\n\t\t\t\t\thistory={history}\n\t\t\t\t\tusers={users}\n\t\t\t\t\tgameStarted={gameStarted}\n\t\t\t\t\tsetGameId={setGameId}\n\t\t\t\t/>\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n};\n\nlet useGameExists = (gameId, connection) => {\n\tlet [gameExists, setGameExists] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (connection && gameId) {\n\t\t\tconnection.emit('reqGameExists', gameId);\n\t\t\tconnection.on('getGameExists', gameExists =>\n\t\t\t\tsetGameExists(gameExists)\n\t\t\t);\n\t\t\treturn () => connection.off('getGameExists');\n\t\t}\n\t}, [connection, gameId]);\n\n\treturn [gameExists, setGameExists];\n};\n\nlet useColumns = (gameId, connection, gameExists, gameStarted) => {\n\tlet [columns, setColumns] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (connection && gameId && gameExists && gameStarted) {\n\t\t\tconnection.emit('reqColumns', gameId);\n\t\t\tconnection.off('getColumns');\n\t\t\tconnection.on('getColumns', columns =>\n\t\t\t\tsetColumns(\n\t\t\t\t\t['Character'].concat(columns.concat(['Actions', 'Total']))\n\t\t\t\t)\n\t\t\t);\n\t\t\treturn () => connection.off('getColumns');\n\t\t}\n\t}, [gameId, connection, gameExists, gameStarted]);\n\n\treturn [columns, setColumns];\n};\n\nlet useHands = (gameId, connection, userId, gameExists, gameStarted) => {\n\tlet [hands, setHands] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (connection && gameId && gameExists && gameStarted) {\n\t\t\tconnection.emit('reqHands', { gameId: gameId, userId: userId });\n\t\t\tconnection.off('getHands');\n\t\t\tconnection.on('getHands', hands => setHands(hands));\n\n\t\t\treturn () => {\n\t\t\t\tconnection.off('handTimeout');\n\t\t\t\tconnection.off('getHands');\n\t\t\t};\n\t\t}\n\t}, [gameId, connection, userId, gameExists, gameStarted]);\n\n\treturn [hands, setHands];\n};\n\nlet useSocketConnection = (\n\tserver,\n\tuserId,\n\tsetCookie,\n\tsetUsername,\n\tsetUsernameSaved\n) => {\n\tlet [socket, setSocket] = useState(null);\n\n\tuseEffect(() => {\n\t\tvar connectionOptions = {\n\t\t\t'force new connection': true,\n\t\t\treconnectionAttempts: 'Infinity', //avoid having user reconnect manually in order to prevent dead clients after a server restart\n\t\t\ttimeout: 10000, //before connect_error and connect_timeout are emitted.\n\t\t\ttransports: ['websocket']\n\t\t};\n\t\tconst s = socketIOClient(server, connectionOptions);\n\n\t\tif (\n\t\t\t!userId ||\n\t\t\t(Object.keys(userId).length === 0 && userId.constructor === Object)\n\t\t) {\n\t\t\ts.emit('reqUserId');\n\t\t} else {\n\t\t\ts.emit('reqUsername', userId);\n\t\t}\n\n\t\ts.off('getUsername');\n\t\ts.on('getUsername', username => {\n\t\t\tsetUsername(username);\n\t\t\tsetUsernameSaved(true);\n\t\t});\n\t\ts.off('getUserId');\n\t\ts.on(\n\t\t\t'getUserId',\n\t\t\tuser =>\n\t\t\t\tsetCookie('userId', user.id, { maxAge: 3600 * 8 }) &&\n\t\t\t\tsetUsername(user.name)\n\t\t);\n\n\t\tsetSocket(s);\n\n\t\treturn () => {\n\t\t\ts.off('getUsername');\n\t\t\ts.off('getUserId');\n\t\t};\n\t}, [server, userId, setCookie, setUsername, setUsernameSaved]);\n\n\treturn socket;\n};\n\nconst useStarted = (gameExists, gameId, userId, connection) => {\n\tlet [started, setStarted] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (connection && gameId && gameExists && userId) {\n\t\t\tconnection.emit('reqGameStarted', gameId);\n\t\t\tconnection.off('getGameStarted');\n\t\t\tconnection.on('getGameStarted', res => setStarted(res));\n\t\t\treturn () => connection.off('getGameStarted');\n\t\t}\n\t}, [gameExists, gameId, userId, connection]);\n\n\treturn [started, setStarted];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\";\n \nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}